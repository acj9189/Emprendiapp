
# Set here configurations for the database connection

# Connection url for the database "open_source_db"
#spring.datasource.url=jdbc:mysql://localhost:3306/romano
spring.datasource.url=jdbc:mysql://localhost:3306/db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
# Username and password
spring.datasource.username=root
spring.datasource.password=

# Show or not log for each sql query
spring.jpa.show-sql=true


#Here, spring.jpa.hibernate.ddl-auto can be none, update, create, create-drop , refer to the Hibernate documentation for details.
# none This is the default for MySQL, no change to the database structure.
# update Hibernate changes the database according to the given Entity structures.
# create Creates the database every time, but do not drop it when close.
# create-drop Creates the database then drops it when the SessionFactory closes.
spring.jpa.hibernate.ddl-auto=update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect



# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

#If you want to run the server in different port no.(By default port no is 8080)
server.port=8690

# * can be used to select all endpoints to expose everything over HTTP
# If you want to exclude some endpoints then we can do like this :
#i.e To expose everything over HTTP except the env and beans endpoints, use the following properties:
#management.endpoints.web.exposure.exclude=env,beans
management.endpoints.web.exposure.include=*

# By default, all endpoints except for shutdown are enabled.
# To configure the enablement of an endpoint, use its management.endpoint.<id>.enabled property.
# The following example enables the shutdown endpoint:
management.endpoint.shutdown.enabled=true


spring.batch.job.enabled= false
